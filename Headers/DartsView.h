//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "SCNView.h"

#import "SCNPhysicsContactDelegate.h"
#import "SCNSceneRendererDelegate.h"

@class ArcheryArrow, DartsDart, NSDate, NSMutableArray, NSMutableString, NSString, NSTimer, SCNGeometry, SCNNode, SCNPhysicsBody, SCNScene, SKAudioNode, SKScene, UIImageView, UIView;

@interface DartsView : SCNView <SCNPhysicsContactDelegate, SCNSceneRendererDelegate>
{
    NSDate *fps;
    SCNNode *camera1;
    SCNNode *camera2;
    float sin_slow;
    float sin_time;
    float shoot_speed;
    float prev_dst;
    NSDate *startDate;
    NSDate *originalStartDate;
    NSDate *prevDate;
    struct CGPoint touchStart;
    struct CGPoint touchStart0;
    struct CGPoint touchCurrent;
    struct CGPoint touchMoved;
    struct CGPoint touchPrev;
    _Bool touchStarted;
    SCNNode *dart_node;
    SCNNode *shadow_node;
    SCNNode *board_light;
    SCNNode *board_win_light;
    DartsDart *main_dart;
    SCNNode *game_board;
    SCNNode *sphere_target;
    SCNNode *sphere_target2;
    SCNNode *sphere_target3;
    SCNNode *sphere_target4;
    UIView *v;
    UIView *v2;
    UIView *v3;
    NSMutableArray *darts;
    UIImageView *aim_view;
    struct CGPoint aim_origin;
    struct CGPoint aim_pos;
    struct CGPoint aim_speed;
    float aim_breath;
    int shot_time;
    NSMutableArray *arrows;
    SCNNode *gameball;
    _Bool alphaing;
    _Bool touching;
    int anim;
    SCNNode *weapon;
    SCNNode *table;
    SCNNode *cam;
    SCNNode *paddle;
    _Bool first_press;
    struct CGPoint first_press_pos;
    SCNNode *paddle_shadow;
    SCNNode *gameball_shadow;
    NSMutableArray *highlight_textures;
    SCNNode *highlight;
    SCNNode *grass;
    SCNNode *target;
    SCNNode *target_front;
    SCNNode *weapon_arrow;
    SCNNode *arrow_shadow;
    SCNNode *plack;
    ArcheryArrow *arrow;
    struct SCNVector3 arrow_target;
    SCNNode *rayplane;
    SCNNode *pole1;
    SCNNode *pole2;
    SCNNode *ball;
    SCNNode *basket;
    SCNNode *basket_main;
    SCNNode *net;
    SCNNode *net2;
    SCNNode *net_col;
    SCNNode *ball_shadow;
    SCNNode *selected;
    SCNPhysicsBody *selected_body;
    SCNScene *scene;
    float speed;
    float speed_x;
    struct CGPoint touch_start;
    struct CGPoint prev_pos;
    struct CGPoint touch_pos;
    struct CGPoint prev_pos2;
    struct CGVector vec;
    int last_shot;
    int last_shot2;
    int net_frame;
    NSMutableArray *balls;
    SCNNode *count11;
    SCNNode *count12;
    SCNNode *count21;
    SCNNode *count22;
    SCNNode *time1;
    SCNNode *time2;
    int times1;
    int times2;
    SCNGeometry *mat2;
    NSDate *last_bounce;
    NSDate *last_rim;
    NSTimer *timer2;
    NSMutableArray *net4_textures;
    NSMutableArray *net3_textures;
    NSMutableArray *num_textures;
    NSDate *last;
    int shot_back_timer;
    SKAudioNode *wind_sound;
    SKAudioNode *press_sound;
    _Bool start_aim;
    _Bool stopped;
    _Bool touched;
    _Bool _show_tip;
    int state;
    int seed;
    int score1;
    int score2;
    int player;
    int timer;
    int times;
    float ratio;
    int time;
    NSMutableString *replay_send;
    NSDate *start_time;
    NSMutableArray *replay1;
    NSMutableArray *replay2;
    NSString *mode;
    SKScene *sk_scene;
}

@property _Bool show_tip; // @synthesize show_tip=_show_tip;
@property _Bool touched; // @synthesize touched;
@property _Bool stopped; // @synthesize stopped;
@property(retain) SKScene *sk_scene; // @synthesize sk_scene;
@property int time; // @synthesize time;
@property(retain) NSString *mode; // @synthesize mode;
@property float ratio; // @synthesize ratio;
@property int times; // @synthesize times;
@property int timer; // @synthesize timer;
@property int player; // @synthesize player;
@property(retain) NSMutableArray *replay2; // @synthesize replay2;
@property(retain) NSMutableArray *replay1; // @synthesize replay1;
@property int score2; // @synthesize score2;
@property int score1; // @synthesize score1;
@property int seed; // @synthesize seed;
@property int state; // @synthesize state;
@property(retain) NSDate *start_time; // @synthesize start_time;
@property(retain) NSMutableString *replay_send; // @synthesize replay_send;
- (void).cxx_destruct;
- (void)didReceiveMemoryWarning;
- (unsigned long long)supportedInterfaceOrientations;
- (_Bool)prefersStatusBarHidden;
- (_Bool)shouldAutorotate;
- (void)touchUpAtPoint:(struct CGPoint)arg1;
- (void)touchMovedToPoint:(struct CGPoint)arg1;
- (void)Skip;
- (void)renderer:(id)arg1 updateAtTime:(double)arg2;
- (void)spawn:(int)arg1;
- (void)spawn;
- (void)rem:(id)arg1;
- (void)unload;
- (id)findIntersection:(struct CGPoint)arg1 p2:(struct CGPoint)arg2 p3:(struct CGPoint)arg3 p4:(struct CGPoint)arg4;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)shoot:(struct CGPoint)arg1 target:(_Bool)arg2 pre:(_Bool)arg3;
- (void)shoot:(struct CGPoint)arg1 target:(_Bool)arg2;
- (void)preshoot;
- (void)shoot;
- (void)shoot:(struct CGPoint)arg1 full_score:(int)arg2 score:(int)arg3 multi:(int)arg4;
- (void)updateShoot;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)spawnDart;
- (void)update;
- (void)clean;
- (void)start;
- (void)createScene;
- (void)renderer:(id)arg1 didSimulatePhysicsAtTime:(double)arg2;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

